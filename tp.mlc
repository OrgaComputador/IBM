PROGRAM2  SUBENTRY BASES=(13)
          
*REG USADOS: 1 (SUBENTRY) 10 (BAL) 2(CICLO PEDIR OBJETOS)
CUANTOS   MVC CANTOBJ(2),=X'0'
          WTOR 'CUANTOS OBJETOS ENVIARA? <= A 20',CANTOBJ,,WAITECB
          WAIT ECB=WAITECB
          LA 12,CANTOBJ
          BAL 10,MOVENUM *LO HAGO POR SI RECIBI UN NRO < 10
          LA 14,2 *PARA EL PRIMER INGRESO CHEQUEO 2 BYTES
          LA 15,CANTLIM
          BAL 10,VALFIS *ACA CHEQUEO QUE CANTOBJS SEAN NUMEROS
          CLI INGVALID,C'S'
          BNE CUANTOS
          PACK CANTOBJE,CANTOBJ *LO NECESITO EMPAQ P/ OPERACIONES
          ZAP EMPA,CANTOBJE
          ZAP LIMINF,=P'1'
          ZAP LIMSUP,=P'20'
          BAL 10,VALLOG *CHEQUEA QUE EFECTIVAMENTE SEA <= 20
          CLI INGVALID,C'S'  
          BNE CUANTOS 
          SR 2,2
          CVB 2,CANTOBJE *CON ESTO HAGO EL CICLO P/PEDIR OBJETOS
          BAL 10,INIVECTR *INICIALIZO EL VECTOR DE DATOS
          LA 7,OBJETOS *APUNTA AL PRIMER ID DE LOS OBJETOS
	      BAL 10,FORMINFO
	      WTO ''
CONT      WTO 'A CONTINUACION SE PEDIRA QUE INGRESE PRIMERO EL DESTINO'
          WTO 'Y LUEGO EL PESO DEL OBJETO. LOS DESTINOS SE IDENTIFICAN'
          WTO 'DE LA SIGUIENTE MANERA:'
          WTO ''
CIUDAD    WTO 'A: BARILOCHE, B: MAR DEL PLATA, C: POSADAS, D: SALTA'
          WTO ''
          WTO MF=(E,WTOBLOCK)
          MVC INGCIUD,X'0'
          WTOR 'ESCOJA LA CIUDAD (A, B, C, D)',INGCIUD,,WAITECB
          WAIT ECB=WAITECB
          LA 12,INGCIUD
          LA 14,1
          LA 15,DESTLIM
          BAL 10,VALFIS
          CLI INGVALID,C'S'
          BNE CIUDAD
PESO      MVC INGPESO,X'0'
          WTOR 'INGRESE EL PESO (MENOR A 9)',INGPESO,,WAITECB
          WAIT ECB=WAITECB
          LA 12,INGPESO
          BAL 10,MOVENUM
          LA 14,2
          LA 15,PESLIM
          BAL 10,VALFIS
          CLI INGVALID,C'S'
          BNE PESO
          PACK PESOACT,INGPESO
          ZAP EMPA,PESOACT
          ZAP LIMINF,=P'1'
          ZAP LIMSUP,=P'8'
          BAL 10,VALLOG
          CLI INGVALID,C'S'
          BNE PESO
          LA 7,2(7) *ME MUEVO A CIUDAD
          MVC 0(1,7),INGCIUD
          LA 7,1(7) *ME MUEVO A PESO
          ZAP 0(2,7),PESOACT(4)
          LA 7,3(7)
          BAL 10,FORMINFO
          BCT 2,CIUDAD *HASTA ACA ESTA TODO VALID Y FUNCIONA
          BAL 10,EMPAQUET      
          BAL 10,MOSTRAR
          SUBEXIT

*RUTINA QUE FORMATEA EL CAMPO 'MENSAJE' PARA MOSTRAR LA INFORMACION 
*SOBRE QUE PAQUETE SE ESTA PIDIENDO LOS DATOS
*EL REGISTRO 7 DEBE ESTAR APUNTANDO A A UN CARACTER DE 2 BYTES QUE
*REPRESENTA EL ID DEL PROXIMO OBJETO A PEDIR LA INFORMACION
FORMINFO MVC MENSAJE,BLANCOS
         MVC MENSAJE(39),=C'INGRESE LOS DATOS PARA EL OBJETO N?:   '
         MVC MENSAJE+37(2),0(7)
         CLI MENSAJE+37,C'0'
         BNE SALIR
         MVC MENSAJE+37(1),MENSAJE+38
         MVI MENSAJE+38,C' '
SALIR    BR 10   
      
*RUTINA PARA MOSTRAR LOS PAQUETES YA ARMADOS Y ALMACENADOS EN
*'PAQUETES'
PAQITEMS DC C'ITEMS EN EL PAQUETE:                       '
PAQPESO  DC C'PESO DEL PAQUETE:  KG'
PAQNUM   DC C'PAQUETE NUMERO:  '
DESTPAQ  DC C' DESTINO DEL PAQUETE:              '
ITEMSFRM DS CL23 *COMO MUCHO HAY 8 ITEMS CON ID'S DE 2 DIGITOS 
MOSTRAR  LA 6,PAQUETES *PARA ITERAR SOBRE LOS PAQUETES
         LA 7,PESOSPAQ *PARA ITERAR SOBRE LOS PESOS DE LOS PAQUETES
         LA 8,1 *PARA INDICAR CUAL ES EL PAQUETE ACTUAL
IMPRNXT BAL 11,ARMPQNUM
         BAL 11,ARMDEST
         BAL 11,ARMPESO
         BAL 11,ARMITEMS
         BAL 11,MOSTPAQ
         LA 6,1(6)
         CLI 0(6),C'*'
         BE FINPRG
         LA 7,1(7)
         A 8,=F'1'
         B IMPRNXT
FINPRG   BR 10
  
  
ACTUALID DS CL2  
*COLOCA LOS ITEMS EN PAQITEMS         
ARMITEMS LA 6,1(6)
         LA 9,PAQITEMS+21 *CARGO LA DIRECCION A PARTIR DE DONDE LLENARE
OTROID   MVC ACTUALID(2),0(6)
         CLI ACTUALID,C'0'
         BE PUT1DIG
         B PUT2DIG 
SIGID    LA 6,2(6)
         CLI 0(6),C'@'
         BE ITSADDED
         LA 9,1(9) *AVANZO UN LUGAR
         B OTROID                     
ITSADDED MVC 0(1,9),=C'.'
         BR 11       

                
*LOS DOS SIGUIENTES AGREGAN EL ID Y UNA COMA, Y EL REGISTRO 9 APUNTA
*A ESA COMA                
                
PUT1DIG  MVC 0(1,9),ACTUALID+1
         MVC 1(1,9),=C','       
         LA 9,1(9)
         B SIGID
         
PUT2DIG  MVC 0(2,9),ACTUALID
         MVC 2(1,9),=C','                
         LA 9,2(9)
         B SIGID   
         
           
*MUESTRA EL PAQUETE, DEBE ESTAR TODO ARMADO EN PAQNUM, PAQPESO Y ITEMS                 
MOSTPAQ  WTO ''
         MVC MENSAJE,BLANCOS
         MVC MENSAJE(17),PAQNUM
         WTO MF=(E,WTOBLOCK)
         MVC MENSAJE,BLANCOS
         MVC MENSAJE(35),DESTPAQ
         WTO MF=(E,WTOBLOCK)
         MVC MENSAJE,BLANCOS
         MVC MENSAJE(21),PAQPESO
         WTO MF=(E,WTOBLOCK)
         MVC MENSAJE,BLANCOS
         MVC MENSAJE(43),PAQITEMS
         WTO MF=(E,WTOBLOCK)
         WTO ''
         BR 11


          
ARMPQNUM CVD 8,DECAUX
         UNPK CAUX,DECAUX+6(2)
         MVZ CAUX+1,=X'FF'
         B PUTSPA
SIGUE    MVC PAQNUM+16(2),CAUX
         BR 11
         
PUTSPA   CLI CAUX,C'0'
         BNE SIGUE
         MVC CAUX(1),CAUX+1
         MVI CAUX+1,C' '
         B SIGUE

*OPCIONES DEL PAQUETE
DESTS4   DS 0CL56 *CADA 14 BYTES TENGO LA PROXIMA OPCION
         DC C'ABARILOCHE    '         
         DC C'BMAR DEL PLATA'
         DC C'CPOSADAS      '         
         DC C'DSALTA        '
*ARMDEST UTILIZA EL REGISTRO 4 PARA ITERAR SOBRE LOS 4 POSIBLES DESTS              
ARMDEST  LA 4,DESTS4
TRYSIG   CLC 0(1,4),0(6)
         BNE NEXTDEST
         MVC DESTPAQ+22(13),1(4)
         BR 11
NEXTDEST LA 4,14(4)  
         B TRYSIG   

*EL REGISTRO 7 DEBE APUNTAR A LA POSICION DEL VECTOR DE PESOS QUE 
*SE TIENE QUE MOSTRAR POR PANTALLA
PESOCAD  DS CL1
ARMPESO  UNPK PESOCAD(1),0(1,7)
         MVZ PESOCAD(1),=X'FF'
         MVC PAQPESO+18(1),PESOCAD
         BR 11
        
*EL SIG VECTOR GUARDA LOS PAQUETES DE LA SIGUIENTE MANERA:
*1 BYTES PARA UN CARACTER '@' QUE INDICA EL FIN DE UN PAQUETE
*1 BYTE INDICANDO LA CIUDAD DE DESTINO
*2N BYTES PARA INDICAR LOS ID'S DE LOS OBJETOS (CADA ID OCUPA 2 BYTES). 
*PARA N TOMO EL PEOR CASO, QUE ES EN EL QUE C/PAQUETE TIENE UN UNICO
*ELEMENTO, POR LO TANTO NECESITARE (1+1+2)*20 = 80 + 2 BYTES DE ESPACIO
*+2 PORQUE EN EL BYTE 81 GUARDO UN @ QUE INDICA QUE FINALIZO ESE PAQUET
*Y EN EL 82 QUE FINALIZA EL VECTOR
*INICIALIZO EL VECTOR TODO CON * PARA SABER CUANDO FINALIZA

PESOSPAQ DC 20PL1'0' *C/PAQ PESA <= 8 Y COMO MUCHO HABRA 20 PAQUETES
PAQUETES DC 82CL1'*'
PESREL  DS PL4
*RUTINA PARA ARMAR LOS PAQUETES
*EL REGISTRO 4 SE USARA PARA GUARDAR LA DIRECCION DE PAQUETES
*EL REGISTRO 5 SE USARA PARA GUARDAR LA DIRECCION DE OBJETOS
*EL REG 2 SE USA P SABER LA CANTIDAD DE PAQUETES A ARMAR
*SE REUTILIZA LA CONSTANTE PESOACT PARA GUARDAR EL PESO DEL PAQUETE ACT
*CONSTANTE CIUDACT GUARDA LA CIUDAD DEL PAQ ACTUAL
EMPAQUET LA 7,PESOSPAQ *GUARDA EL PESO DE C/PAQUETE
         LA 4,PAQUETES *LUEGO HACIA  LA 5,OBJETOS         
         SR 2,2
         CVB 2,CANTOBJE *CICLO PARA SABER CUANTOS OBJETOS HAY Q GUARDAR  
         SR 11,11 
         AR 11,2 *AUX PARA SABER SIEMPRE CUANTO RECORRER
NEWPAQ   C 2,=F'0'
         BE FIN
         B BUSCAPRIM *CANDIDATO A SALTAR AQUI
PONPRIM  MVC 0(1,4),2(5) *ESTO GUARDA EL DESTINO DE ESTE P
         MVC CIUDACT(1),2(5) *ME GUARDO LA CIUDAD DE ESTE PAQ
         MVC 1(2,4),0(5) *GUARDO EL PRIMER OBJETO DEL PAQ
         MVI 5(5),C'S' *LO INDICO COMO OCUPADO
         ZAP PESOACT(4),3(2,5)
         S 2,=F'1'
         C 2,=F'0'
         BNE BUSCAOT
         AP 0(1,7),PESOACT(4)
         MVI 3(4),C'@'
FIN      BR 10
         
BUSCAOT  LA 4,3(4) *ME DESPLAZO A EL LUGAR P PONER EL PROX ITEM
         SR 8,8
         AR 8,3 *PARA SABER HASTA DONDE PUEDO IR
NEXTOBJ  LA 5,6(5) *MIRO EL SIG OBJETO
         CLI 5(5),C'S'
         BE OTROBJ
         CLC 2(1,5),CIUDACT
         BNE OTROBJ
         ZAP PESAUX(4),3(2,5)
         ZAP PESREL(4),PESOACT(4)
         AP PESREL(4),PESAUX(4)
         CP PESREL,=P'8'
         BH OTROBJ
         B ANADIR
OTROBJ   BCT 8,NEXTOBJ
         MVI 0(4),C'@'
         LA 4,1(4) *ME MUEVO AL PROX LUGAR P/PONER OTRO PAQ
         AP 0(1,7),PESOACT(4)
         LA 7,1(7) *ACA CARGUE EL PESO DE UN NUEVO PAQUETE, Y AVANCE
         B NEWPAQ
*IMPLEMENTAR  

ANADIR   MVC 0(2,4),0(5) *ANADO OTRO OBJETO..
         AP PESOACT(4),3(2,5) *ACTUALIZO EL PESO ACTUAL DEL PAQUETE..
         MVI 5(5),C'S' *MARCO A ESTE OBJETO AHORA COMO OCUPADO
         S 2,=F'1' *UN ELEMENTO MENOS PARA AGREGAR.. 
         LA 4,2(4) *ME DESPLAZO EN EL LUGAR PARA PONER PROX ITEM..
         B OTROBJ
*HASTA ACA TENGO EN PAQUETES AL PRIMER OBJETO, TENDRIA Q
*MOVER REGISTRO 5 HASTA LA POS DONDE PONGO EL PROXIMO ID
*CHEQUEAR QUE EL PESO SEA < 9 PARA VER SI EN VEZ DE PROX ID
*BUSCO OTRA VEZ PRIMERO
 



*ESTA "RUTINA" BUSCA EL PRIMER OBJETO QUE AUN NO HA SIDO EMPAQUETADO
*GUARDA SU DIRECCION EN EL REGISTRO 5
*IMPORTANTE: EL REGISTRO 5 DEBE ESTAR CARGADO ANTERIORMENTE CON LA
*DIRECCION DEL ARREGLO DE OBJETOS
*UTILIZA EL REGISTRO 6 COMO CONTADOR 
*COMO PRECONDICION: TODAVIA HAY OBJETOS PARA EMPAQUETAR, OSEA ALGUNO
*TODAVIA NO FUE EMPAQUETADO Y SERA EL PRIMERO.
BUSCAPRIM SR 6,6
          AR 6,11 *LA 6,20 COMO MUCHO TENGO QUE MOVERME HASTA EL OBJ20
          LA 5,OBJETOS
          SR 3,3
          AR 3,11
SIGOBJ    S 3,=F'1'
          CLI 5(5),C'N' *SI ES TRUE YA ESTA EL PRIMERO DE MI PROX PAQ
          BE PONPRIM
          LA 5,6(5) *ME MUEVO AL PROX OBJETO
          BCT 6,SIGOBJ



* RUTINA VALIDACION FISICA
* EL REGISTRO 12 DEBE APUNTAR A LA CADENA A CHEQUEAR
* EL REGISTRO 14 DEBE TENER CUANTOS BYTES A CHEQUEAR
* SE DEBE TENER APUNTADO EN EL REGISTRO 15 A LOS LIMITES INFERIORES
* Y SUPERIORES. PRIMER DEBE APUNTAR AL LIMITE INFERIOR

VALFIS   CLC 0(1,12),0(15)
         BL INVALID
         CLC 0(1,12),1(15)
         BH INVALID
         LA 12,1(12)
         BCT 14,VALFIS
         MVI INGVALID,C'S'
         BR 10



*VERIFICA QUE UN NUMERO ESTE ENTRE LOS LIMITES DE DOS
*EMPAQUETADOS
*SE DEBE PRIMERO GUARDAR AL EMPAQUETADO EN 'EMPA' (MAX LONG: 10)
*LOS LIMITES DEBEN ESTAR YA ARMADOS EN LIMINF Y LIMSUP

VALLOG   CP EMPA,LIMINF
         BL INVALID
         CP EMPA,LIMSUP
         BH INVALID
         MVI INGVALID,C'S'
         BR 10
         
*ESTA PEQUE?A RUTINA INDICA QUE EL INGRESO FUE INVALIDO.
*BIFURCA AL REGISTRO 10         
INVALID  MVI INGVALID,C'N'
         BR 10
     
     
*LO QUE ESTE EN EL REGISTRO 12 DEBE SER DEL TIPO
*FX40 CON 0 < X < 9
* CAMBIA DE LUGAR Y PONE UN F0 AL PRINCIPIO, QUEDA F0FX

MOVENUM  CLI 1(12),C' '
         BNE NO
         MVC 1(1,12),0(12)
         MVI 0(12),C'0'
NO       BR 10


WTOBLOCK DC H'204'
         DC H'0'
MENSAJE  DS CL200
BLANCOS  DC 200CL1' '
    
    
CIUDACT  DS CL1
PESAUX   DS PL4
PESOACT  DS PL4
INGCIUD  DS CL1     
INGPESO  DS PL2
INGVALID DS CL1    
CANTLIM  DC C'09'
CANTEMP  DC P'1',P'20'
PESLIM   DC C'08'
DESTLIM  DC C'AD'
CANTOBJE DS PL8 *LONGITUD 8 PORQUE LO CONVERTIRE A BINARIO
EMPA     DS PL10  
LIMINF   DS PL5
LIMSUP   DS PL5             
CANTOBJ  DS CL2
WAITECB  DC F'0'

OBJETOS  DC 120XL1'00'
CAUX     DS CL2 *AUXILIAR PARA RELLENAR LOS IDS 
DECAUX   DS FD *PARA TRANSFORMACIONES

*INICIALIZA EL VECTOR QUE GUARDA LOS DATOS DE LOS OBJETOS
*LOS PRIMEROS DOS BYTES INDICAN EL ID DEL OBJETO
*EL SIGUIENTE BYTE, EL DESTINO DEL OBJETO
*LUEGO SE RESERVAN 2 BYTES PARA UN EMPAQUETADO QUE ES EL PESO DEL OBJ
*FINALMENTE, UN BYTE PARA INDICAR SI YA FUE EMPAQUETADO O NO (S/N)
*EN EL REGISTRO 2 SE TIENE LA CANTIDAD DE OBJETOS A INICIALIZAR
INIVECTR LA 7,OBJETOS
         LA 15,1
PROX     CVD 15,DECAUX
         UNPK 0(2,7),DECAUX+6(2)
         MVZ 1(1,7),=X'FF'
         MVI 5(7),C'N'
         LA 7,6(7)
         CLR 15,2
         BE LLENO
         A 15,=F'1'
         B PROX
LLENO    BR 10


         END
