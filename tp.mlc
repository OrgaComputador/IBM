PROGRAM2  SUBENTRY BASES=(13)
          
*REG USADOS: 1 (SUBENTRY) 10 (BAL) 2(CICLO PEDIR OBJETOS)
CUANTOS   MVC CANTOBJ(2),=X'0'
          WTOR 'CUANTOS OBJETOS ENVIARA? <= A 20',CANTOBJ,,WAITECB
          WAIT ECB=WAITECB
          LA 12,CANTOBJ
          BAL 10,MOVENUM *LO HAGO POR SI RECIBI UN NRO < 10
          LA 14,2 *PARA EL PRIMER INGRESO CHEQUEO 2 BYTES
          LA 15,CANTLIM
          BAL 10,VALFIS *ACA CHEQUEO QUE CANTOBJS SEAN NUMEROS
          CLI INGVALID,C'S'
          BNE CUANTOS
          PACK CANTOBJE,CANTOBJ
          ZAP EMPA,CANTOBJE
          ZAP LIMINF,=P'1'
          ZAP LIMSUP,=P'20'
          BAL 10,VALLOG *CHEQUEA QUE EFECTIVAMENTE SEA <= 20
          CLI INGVALID,C'S'  
          BNE CUANTOS 
          SR 2,2
          CVB 2,CANTOBJE *CON ESTO HAGO EL CICLO P/PEDIR OBJETOS
          LA 7,OBJETOS *REUTUILIZO 14, APUNTA AL ID DE OBJETO,+4NEXT
          MVC OBJACT+41(2),0(7)
          WTO 'A CONTINUACION SE PEDIRA QUE INGRESE PRIMERO EL DESTINO'
          WTO 'Y LUEGO EL PESO DEL OBJETO. LOS DESTINOS SE IDENTIFICAN'
          WTO 'DE LA SIGUIENTE MANERA:'
          WTO 'A: BARILOCHE'
          WTO 'B: MAR DEL PLATA'
          WTO 'C: POSADAS'
          WTO 'D: SALTA'
CIUDAD    WTO MF=(E,WTOBLOCK)
          MVC INGCIUD,X'0'
          WTOR 'ESCOJA LA CIUDAD',INGCIUD,,WAITECB
          WAIT ECB=WAITECB
          LA 12,INGCIUD
          LA 14,1
          LA 15,DESTLIM
          BAL 10,VALFIS
          CLI INGVALID,C'S'
          BNE CIUDAD
PESO      MVC INGPESO,X'0'
          WTOR 'INGRESE EL PESO (MENOR A 9)',INGPESO,,WAITECB
          WAIT ECB=WAITECB
          LA 12,INGPESO
          BAL 10,MOVENUM
          LA 14,2
          LA 15,PESLIM
          BAL 10,VALFIS
          CLI INGVALID,C'S'
          BNE PESO
          PACK PESOACT,INGPESO
          ZAP EMPA,PESOACT
          ZAP LIMINF,=P'1'
          ZAP LIMSUP,=P'8'
          BAL 10,VALLOG
          CLI INGVALID,C'S'
          BNE PESO
          LA 7,2(7) *ME MUEVO A CIUDAD
          MVC 0(1,7),INGCIUD
          LA 7,1(7) *ME MUEVO A PESO
          ZAP 0(2,7),PESOACT(4)
          LA 7,3(7)
          MVC OBJACT+41(2),0(7)
          BCT 2,CIUDAD *HASTA ACA ESTA TODO VALID Y FUNCIONA
          BAL 10,EMPAQUET      
          WTO MF=(E,WTODEL)
          SUBEXIT

*EL SIG VECTOR GUARDA LOS PAQUETES DE LA SIGUIENTE MANERA:
*1 BYTES PARA UN CARACTER '@' QUE INDICA EL FIN DE UN PAQUETE
*1 BYTE INDICANDO LA CIUDAD DE DESTINO
*2N BYTES PARA INDICAR LOS ID'S DE LOS OBJETOS (CADA ID OCUPA 2 BYTES). 
*PARA N TOMO EL PEOR CASO, QUE ES EN EL QUE C/PAQUETE TIENE UN UNICO
*ELEMENTO, POR LO TANTO NECESITARE (1+1+2)*20 = 80 + 2 BYTES DE ESPACIO
*+2 PORQUE EN EL BYTE 81 GUARDO UN @ QUE INDICA QUE FINALIZO ESE PAQUET
*Y EN EL 82 QUE FINALIZA EL VECTOR
*INICIALIZO EL VECTOR TODO CON * PARA SABER CUANDO FINALIZA

PESOSPAQ DC 20PL1'0' *C/PAQ PESA <= 8 Y COMO MUCHO HABRA 20 PAQUETES
WTODEL DC H'86'
       DC H'0'
PAQUETES DC 82CL1'2A'
PESREL  DS PL4
*RUTINA PARA ARMAR LOS PAQUETES
*EL REGISTRO 4 SE USARA PARA GUARDAR LA DIRECCION DE PAQUETES
*EL REGISTRO 5 SE USARA PARA GUARDAR LA DIRECCION DE OBJETOS
*EL REG 2 SE USA P SABER LA CANTIDAD DE PAQUETES A ARMAR
*SE REUTILIZA LA CONSTANTE PESOACT PARA GUARDAR EL PESO DEL PAQUETE ACT
*CONSTANTE CIUDACT GUARDA LA CIUDAD DEL PAQ ACTUAL
EMPAQUET LA 7,PESOSPAQ *GUARDA EL PESO DE C/PAQUETE
         LA 4,PAQUETES *LUEGO HACIA  LA 5,OBJETOS         
         SR 2,2
         CVB 2,CANTOBJE *CICLO PARA SABER CUANTOS OBJETOS HAY Q GUARDAR  
         SR 11,11 
         AR 11,2 *AUX PARA SABER SIEMPRE CUANTO RECORRER
NEWPAQ   C 2,=F'0'
         BE FIN
         B BUSCAPRIM *CANDIDATO A SALTAR AQUI
PONPRIM  MVC 0(1,4),2(5) *ESTO GUARDA EL DESTINO DE ESTE P
         MVC CIUDACT(1),2(5) *ME GUARDO LA CIUDAD DE ESTE PAQ
         MVC 1(2,4),0(5) *GUARDO EL PRIMER OBJETO DEL PAQ
         MVI 5(5),C'S' *LO INDICO COMO OCUPADO
         ZAP PESOACT(4),3(2,5)
         S 2,=F'1'
         C 2,=F'0'
         BNE BUSCAOT
         AP 0(1,7),PESOACT(4)
         MVI 3(4),C'@'
FIN      BR 10
         
BUSCAOT  LA 4,3(4) *ME DESPLAZO A EL LUGAR P PONER EL PROX ITEM
         SR 8,8
         AR 8,3 *PARA SABER HASTA DONDE PUEDO IR
NEXTOBJ  LA 5,6(5) *MIRO EL SIG OBJETO
         CLI 5(5),C'S'
         BE OTROBJ
         CLC 2(1,5),CIUDACT
         BNE OTROBJ
         ZAP PESAUX(4),3(2,5)
         ZAP PESREL(4),PESOACT(4)
         AP PESREL(4),PESAUX(4)
         CP PESREL,=P'8'
         BH OTROBJ
         B ANADIR
OTROBJ   BCT 8,NEXTOBJ
         MVI 0(4),C'@'
         LA 4,1(4) *ME MUEVO AL PROX LUGAR P/PONER OTRO PAQ
         AP 0(1,7),PESOACT(4)
         LA 7,1(7) *ACA CARGUE EL PESO DE UN NUEVO PAQUETE, Y AVANCE
         B NEWPAQ
*IMPLEMENTAR  

ANADIR   MVC 0(2,4),0(5) *ANADO OTRO OBJETO..
         AP PESOACT(4),3(2,5) *ACTUALIZO EL PESO ACTUAL DEL PAQUETE..
         MVI 5(5),C'S' *MARCO A ESTE OBJETO AHORA COMO OCUPADO
         S 2,=F'1' *UN ELEMENTO MENOS PARA AGREGAR.. 
         LA 4,2(4) *ME DESPLAZO EN EL LUGAR PARA PONER PROX ITEM..
         B OTROBJ
*HASTA ACA TENGO EN PAQUETES AL PRIMER OBJETO, TENDRIA Q
*MOVER REGISTRO 5 HASTA LA POS DONDE PONGO EL PROXIMO ID
*CHEQUEAR QUE EL PESO SEA < 9 PARA VER SI EN VEZ DE PROX ID
*BUSCO OTRA VEZ PRIMERO
 



*ESTA "RUTINA" BUSCA EL PRIMER OBJETO QUE AUN NO HA SIDO EMPAQUETADO
*GUARDA SU DIRECCION EN EL REGISTRO 5
*IMPORTANTE: EL REGISTRO 5 DEBE ESTAR CARGADO ANTERIORMENTE CON LA
*DIRECCION DEL ARREGLO DE OBJETOS
*UTILIZA EL REGISTRO 6 COMO CONTADOR 
*COMO PRECONDICION: TODAVIA HAY OBJETOS PARA EMPAQUETAR, OSEA ALGUNO
*TODAVIA NO FUE EMPAQUETADO Y SERA EL PRIMERO.
BUSCAPRIM LA 6,20 *COMO MUCHO TENGO QUE MOVERME HASTA EL OBJ20
          LA 5,OBJETOS
          SR 3,3
          AR 3,11
SIGOBJ    S 3,=F'1'
          CLI 5(5),C'N' *SI ES TRUE YA ESTA EL PRIMERO DE MI PROX PAQ
          BE PONPRIM
          LA 5,6(5) *ME MUEVO AL PROX OBJETO
          BCT 6,SIGOBJ



* RUTINA VALIDACION FISICA
* EL REGISTRO 12 DEBE APUNTAR A LA CADENA A CHEQUEAR
* EL REGISTRO 14 DEBE TENER CUANTOS BYTES A CHEQUEAR
* SE DEBE TENER APUNTADO EN EL REGISTRO 15 A LOS LIMITES INFERIORES
* Y SUPERIORES. PRIMER DEBE APUNTAR AL LIMITE INFERIOR

VALFIS   CLC 0(1,12),0(15)
         BL INVALID
         CLC 0(1,12),1(15)
         BH INVALID
         LA 12,1(12)
         BCT 14,VALFIS
         MVI INGVALID,C'S'
         BR 10



*VERIFICA QUE UN NUMERO ESTE ENTRE LOS LIMITES DE DOS
*EMPAQUETADOS
*SE DEBE PRIMERO GUARDAR AL EMPAQUETADO EN 'EMPA' (MAX LONG: 10)
*LOS LIMITES DEBEN ESTAR YA ARMADOS EN LIMINF Y LIMSUP

VALLOG   CP EMPA,LIMINF
         BL INVALID
         CP EMPA,LIMSUP
         BH INVALID
         MVI INGVALID,C'S'
         BR 10
         
*ESTA PEQUE?A RUTINA INDICA QUE EL INGRESO FUE INVALIDO.
*BIFURCA AL REGISTRO 10         
INVALID  MVI INGVALID,C'N'
         BR 10
     
     
*LO QUE ESTE EN EL REGISTRO 12 DEBE SER DEL TIPO
*FX40 CON 0 < X < 9
* CAMBIA DE LUGAR Y PONE UN F0 AL PRINCIPIO, QUEDA F0FX

MOVENUM  CLI 1(12),C' '
         BNE NO
         MVC 1(1,12),0(12)
         MVI 0(12),C'0'
NO       BR 10


WTOBLOCK DC H'47'
         DC H'0'
OBJACT   DC CL43'INGRESE LOS DATOS PARA EL OBJETO NUMERO:   '
    
CIUDACT  DS CL1
PESAUX   DS PL4
PESOACT  DS PL4
INGCIUD  DS CL1     
INGPESO  DS PL2
INGVALID DS CL1    
CANTLIM  DC C'09'
CANTEMP  DC P'1',P'20'
PESLIM   DC C'08'
DESTLIM  DC C'AD'
CANTOBJE DS PL8 *LONGITUD 8 PORQUE LO CONVERTIRE A BINARIO
EMPA     DS PL10  
LIMINF   DS PL5
LIMSUP   DS PL5             
CANTOBJ  DS CL2
WAITECB  DC F'0'



*TABLA CON TODA LA INFORMACION DE LOS OBJETOS QUE SE VAN ANADIENDO
*AGREGO ROTULOS PARA QUE SEA MENOS CONFUSO
OBJETOS  DS 0XL120
OBJ1     DC CL2'01' *ID DEL OBJETO
DEST1    DC CL1' ' *UN ESPACIO INDICA QUE NO EXISTE EL OBJETO  
PESO1    DS PL2
OCUP1    DC C'N' *INDICA SI YA ESTA EN UN PAQUETE*
OBJ2     DC CL2'02' *ID DEL OBJETO
DEST2    DC CL1' ' *UN ESPACIO INDICA QUE NO EXISTE EL OBJETO  
PESO2    DS PL2
OCUP2    DC C'N' *INDICA SI YA ESTA EN UN PAQUETE*
OBJ3     DC CL2'03' *ID DEL OBJETO
DEST3    DC CL1' ' *UN ESPACIO INDICA QUE NO EXISTE EL OBJETO  
PESO3    DS PL2
OCUP3    DC C'N' *INDICA SI YA ESTA EN UN PAQUETE*
OBJ4     DC CL2'04' *ID DEL OBJETO
DEST4    DC CL1' ' *UN ESPACIO INDICA QUE NO EXISTE EL OBJETO  
PESO4    DS PL2
OCUP4    DC C'N' *INDICA SI YA ESTA EN UN PAQUETE*
OBJ5     DC CL2'05' *ID DEL OBJETO
DEST5    DC CL1' ' *UN ESPACIO INDICA QUE NO EXISTE EL OBJETO  
PESO5    DS PL2
OCUP5    DC C'N' *INDICA SI YA ESTA EN UN PAQUETE*
OBJ6     DC CL2'06' *ID DEL OBJETO
DEST6    DC CL1' ' *UN ESPACIO INDICA QUE NO EXISTE EL OBJETO  
PESO6    DS PL2
OCUP6    DC C'N' *INDICA SI YA ESTA EN UN PAQUETE*
OBJ7     DC CL2'07' *ID DEL OBJETO
DEST7    DC CL1' ' *UN ESPACIO INDICA QUE NO EXISTE EL OBJETO  
PESO7    DS PL2
OCUP7    DC C'N' *INDICA SI YA ESTA EN UN PAQUETE*
OBJ8     DC CL2'08' *ID DEL OBJETO
DEST8    DC CL1' ' *UN ESPACIO INDICA QUE NO EXISTE EL OBJETO  
PESO8    DS PL2
OCUP8    DC C'N' *INDICA SI YA ESTA EN UN PAQUETE*
OBJ9     DC CL2'09' *ID DEL OBJETO
DEST9    DC CL1' ' *UN ESPACIO INDICA QUE NO EXISTE EL OBJETO  
PESO9    DS PL2
OCUP9    DC C'N' *INDICA SI YA ESTA EN UN PAQUETE*
OBJ10     DC CL2'10' *ID DEL OBJETO
DEST10    DC CL1' ' *UN ESPACIO INDICA QUE NO EXISTE EL OBJETO  
PESO10    DS PL2
OCUP10    DC C'N' *INDICA SI YA ESTA EN UN PAQUETE*
OBJ11     DC CL2'11' *ID DEL OBJETO
DEST11    DC CL1' ' *UN ESPACIO INDICA QUE NO EXISTE EL OBJETO  
PESO11    DS PL2
OCUP11    DC C'N' *INDICA SI YA ESTA EN UN PAQUETE*
OBJ12     DC CL2'12' *ID DEL OBJETO
DEST12    DC CL1' ' *UN ESPACIO INDICA QUE NO EXISTE EL OBJETO  
PESO12    DS PL2
OCUP12    DC C'N' *INDICA SI YA ESTA EN UN PAQUETE*
OBJ13     DC CL2'13' *ID DEL OBJETO
DEST13    DC CL1' ' *UN ESPACIO INDICA QUE NO EXISTE EL OBJETO  
PESO13    DS PL2
OCUP13    DC C'N' *INDICA SI YA ESTA EN UN PAQUETE*
OBJ14     DC CL2'14' *ID DEL OBJETO
DEST14    DC CL1' ' *UN ESPACIO INDICA QUE NO EXISTE EL OBJETO  
PESO14    DS PL2
OCUP14    DC C'N' *INDICA SI YA ESTA EN UN PAQUETE*
OBJ15     DC CL2'15' *ID DEL OBJETO
DEST15    DC CL1' ' *UN ESPACIO INDICA QUE NO EXISTE EL OBJETO  
PESO15    DS PL2
OCUP15    DC C'N' *INDICA SI YA ESTA EN UN PAQUETE*
OBJ16     DC CL2'16' *ID DEL OBJETO
DEST16    DC CL1' ' *UN ESPACIO INDICA QUE NO EXISTE EL OBJETO  
PESO16    DS PL2
OCUP16    DC C'N' *INDICA SI YA ESTA EN UN PAQUETE*
OBJ17     DC CL2'17' *ID DEL OBJETO
DEST17    DC CL1' ' *UN ESPACIO INDICA QUE NO EXISTE EL OBJETO  
PESO17    DS PL2
OCUP17    DC C'N' *INDICA SI YA ESTA EN UN PAQUETE*
OBJ18     DC CL2'18' *ID DEL OBJETO
DEST18    DC CL1' ' *UN ESPACIO INDICA QUE NO EXISTE EL OBJETO  
PESO18    DS PL2
OCUP18    DC C'N' *INDICA SI YA ESTA EN UN PAQUETE*
OBJ19     DC CL2'19' *ID DEL OBJETO
DEST19    DC CL1' ' *UN ESPACIO INDICA QUE NO EXISTE EL OBJETO  
PESO19    DS PL2
OCUP19    DC C'N' *INDICA SI YA ESTA EN UN PAQUETE*
OBJ20     DC CL2'20' *ID DEL OBJETO
DEST20    DC CL1' ' *UN ESPACIO INDICA QUE NO EXISTE EL OBJETO  
PESO20    DS PL2
OCUP20    DC C'N' *INDICA SI YA ESTA EN UN PAQUETE*
         END
